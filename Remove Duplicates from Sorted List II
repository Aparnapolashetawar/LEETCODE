# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def deleteDuplicates(self, head: ListNode) -> ListNode:
        li=[]
        p=head
        while p:
            li.append(p.val)
            p=p.next
        if not head:
            return None
        elif not head.next:
            return head
        elif li.count(li[0])==len(li):
            return None
        else:
            f=[]
            for i in range(len(li)):
                if li.count(li[i])==1:
                    f.append(li[i])
            print(f)
            if len(f)!=0:
                l = h = ListNode(f[0])
                for digits in range(1, len(f)):
                    l.next = ListNode(f[digits])
                    l = l.next
                return h
            else:
                return None


            



        
        
