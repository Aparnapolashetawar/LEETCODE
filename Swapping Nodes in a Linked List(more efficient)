# MORE EFFICIENT


# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next

class Solution:
    def swapNodes(self, head: ListNode, k: int) -> ListNode:
        li=[]
        p=head
        while p:
            li.append(p.val)
            p=p.next
        print(li)
        x=li[k-1]
        print(x)
        y=li[len(li)-k]
        print(y)
        li[k-1]=y
        li[len(li)-k]=x
        p=head
        for i in li:
            p.val=i
            p=p.next
        return head
        
